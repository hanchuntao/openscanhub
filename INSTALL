- install an el7 server with web server
- cd /etc && git clone https://gitlab.cee.redhat.com/covscan/mock-profiles.git mock
- cd /etc/yum.repos.d && curl -O https://cov01.lab.eng.brq.redhat.com/coverity/install/covscan/covscan-rhel-7.repo
- yum install https://download.eng.brq.redhat.com/pub/fedora/epel/7/x86_64/e/epel-release-7-7.noarch.rpm
- yum install --enablerepo=covscan-testing covscan-hub-prod
- setsebool -P httpd_can_network_connect_db 1
- vim /etc/httpd/conf.d/covscanhub-httpd.conf:
    <Directory "/usr/lib/python2.7/site-packages/covscanhub">
        Require all granted
    </Directory>

- chkconfig httpd on
- service httpd start
- http://covscan-dev/covscanhub should now show up!

- yum install postgresql-server
- postgresql-setup initdb
- vim /var/lib/pgsql/data/pg_hba.conf
    # TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
    local   all         postgres                          ident
    # "local" is for Unix domain socket connections only
    local   all         all                               md5
    # IPv4 local connections:
    host    all         all         127.0.0.1/32          md5
    # IPv6 local connections:
    host    all         all         ::1/128               md5

- chkconfig postgresql on
- service postgresql start
- su - postgres
    psql
    CREATE DATABASE covscanhub;
    CREATE USER "covscanhub" WITH PASSWORD 'velryba';
    GRANT ALL PRIVILEGES ON DATABASE "covscanhub" to "covscanhub";

- /usr/lib/python2.7/site-packages/covscanhub/manage.py syncdb --all
- http://covscan-dev/covscanhub/task/ should now show up!

- /usr/lib/python2.7/site-packages/covscanhub/manage.py shell
    from django.contrib.auth import get_user_model
    User = get_user_model()
    User.objects.create_user('kdudka', 'kdudka@redhat.com', 'xxxxxx')
    User.objects.create_superuser('admin', 'kdudka@redhat.com', 'xxxxxx')
- http://covscan-dev/covscanhub/auth/login/ should now work!
- http://covscan-dev/covscanhub/admin/ should be available when logged in as 'admin'!

- yum install covscan-client
- vim /etc/covscan/covscan.conf
    HUB_URL = "http://covscan-dev/covscanhub/xmlrpc"
    AUTH_METHOD = "password"
    USERNAME = "kdudka"
    PASSWORD = "xxxxxx"
- now we should be able to list mock configs:
    covscan list-mock-configs

- go at http://covscan-dev/covscanhub/admin/hub/arch/add
    type noarch/noarch and save
- go at http://covscan-dev/covscanhub/admin/hub/channel/add/
    type 'default' and save
- go at http://covscan-dev/covscanhub/admin/scan/profile/
    - edit the 'default' profile
    - set args to:
        {"analyzers": "", "csmock_args": "--all-tools"}
    - hit 'Save'
- now we should be able to submit tasks using the covscan client:
    covscan mock-build --brew-build curl-7.29.0-25.el7

- adduser coverity
- gpasswd -a coverity mock
- vim /etc/covscan/covscand.conf 
    HUB_URL = "http://covscan-dev/covscanhub/xmlrpc"
- go at http://covscan-dev/covscanhub/admin/hub/worker/add/
    - add worker key from /etc/covscan/covscand.conf
    - FIXME: name needs to match worker's FQDN but needs to be at most 30 chars
      long, including the "worker/" prefix
    - select arch 'noarch'
    - select channel 'default'
    - hit 'Save'
- yum install \
    http://download.eng.bos.redhat.com/brewroot/packages/brewkoji/1.22/2.el7/noarch/brewkoji-1.22-2.el7.noarch.rpm \
    http://download.eng.bos.redhat.com/brewroot/packages/brewkoji/1.22/2.el7/noarch/python2-brewkoji-1.22-2.el7.noarch.rpm
- chkconfig covscand on
- service covscand start
- the task should be picked and processed!

- reset password for a user:
    >>> from django.contrib.auth import get_user_model
    >>> User = get_user_model()
    >>> u = User.objects.get(username='admin')
    >>> u.set_password('xxxxxx')
    >>> u.save()

- migrating PostgreSQL database from RHEL-6 to RHEL-7:
    # service postgresql stop
    # rm -v /var/lib/pgsql/data/postmaster.pid
    # yum install postgresql-upgrade
    # postgresql-setup upgrade

- migrating old database scheme (using South):
    # /usr/lib/python2.7/site-packages/covscanhub/manage.py migrate kobo.django.auth

- migrating old database scheme (directly):
    # su -c psql postgres
        \connect covscanhub
        ALTER TABLE auth_user_groups RENAME COLUMN longnameuser_id TO user_id;
        ALTER TABLE auth_user_user_permissions RENAME COLUMN longnameuser_id TO user_id;
        ALTER TABLE hub_worker ADD COLUMN min_priority integer CHECK (min_priority >= 0);

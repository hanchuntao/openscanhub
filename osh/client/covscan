#!/usr/bin/env -S PYTHONNOUSERSITE=1 /usr/bin/python3 -tt
# -*- coding: utf-8 -*-

from __future__ import absolute_import

import sys
import os

import kobo.exceptions
import kobo.client
import kobo.client.commands

# assuming all commands are in covscan/commands/cmd_*.py modules
import osh.client.commands
from osh.common.utils.conf import get_config_dict


# inherit container to make sure nobody will change plugins I registered
class CovScanCommandContainer(kobo.client.ClientCommandContainer):
    pass


def main(args=None):
    # register generic kobo commands
    CovScanCommandContainer.register_module(kobo.client.commands, prefix="cmd_")
    # register project specific commands
    CovScanCommandContainer.register_module(osh.client.commands, prefix="cmd_")

    conf = get_config_dict(config_env="OSH_CLIENT_CONFIG_FILE", config_default="/etc/osh/client.conf")
    if conf is None:
        return 2

    # xmlrpclib/httplib do not follow HTTP redirect
    if conf["HUB_URL"] in ["http://cov01.lab.eng.brq.redhat.com/covscanhub/xmlrpc",
            "https://cov01.lab.eng.brq.redhat.com/covscanhub/xmlrpc"]:
        conf["HUB_URL"] = "https://cov01.lab.eng.brq2.redhat.com/covscanhub/xmlrpc"
        sys.stderr.write("warning: forcing %s as HUB_URL, please update client configuration!\n" % conf["HUB_URL"])

    if sys.version_info[0] >= 3 and conf['AUTH_METHOD'] == 'krbv':
        # there is no 'krbv' for py3 --> use 'gssapi' instead
        conf['AUTH_METHOD'] = 'gssapi'

    # initialize command container
    command_container = CovScanCommandContainer(conf)
    parser = kobo.cli.CommandOptionParser(
        command_container=command_container, # plugin container with registered commands
        add_username_password_options=True,  # include auth options to each command
    )

    try:
        parser.run(args)
    except kobo.exceptions.ImproperlyConfigured as ex:
        sys.stderr.write("\n\nError: Improperly configured: %s\n" % ex)
        return 3
    return 0


if __name__ == "__main__":
    sys.exit(main())

# Development setup of covscan

You can also run covscan in docker, see `docs/development_setup_docker.md`.

## Hub

1. Install an el6 server with web server


### Manual setup of environment

2. Prepare environment (packages):

```
$ cd /etc && sudo git clone -b mock git://git.engineering.redhat.com/users/kdudka/coverity-scan.git mock
$ cd /etc/yum.repos.d && sudo curl -O http://cov01.lab.eng.brq.redhat.com/coverity/install/covscan/covscan-rhel.repo
$ sudo yum install http://download.eng.brq.redhat.com/pub/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm
$ sudo yum install --enablerepo=covscan-testing covscan-hub-prod
$ sudo setsebool -P httpd_can_network_connect_db 1
$ sudo chkconfig httpd on
$ sudo service httpd start
```

3. `http://covscan-dev/covscanhub` should now show up!


## Database (postgresql)

```shell
$ sudo yum install postgresql-server
$ sudo service postgresql initdb
$ sudo vim /var/lib/pgsql/data/pg_hba.conf
    # TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
    local   all         postgres                          ident
    # "local" is for Unix domain socket connections only
    local   all         all                               md5
    # IPv4 local connections:
    host    all         all         127.0.0.1/32          md5
    # IPv6 local connections:
    host    all         all         ::1/128               md5

$ sudo chkconfig postgresql on
$ sudo service postgresql start
$ sudo su - postgres
    psql
    CREATE DATABASE covscanhub;
    CREATE USER "covscanhub" WITH PASSWORD 'velryba';
    GRANT ALL PRIVILEGES ON DATABASE "covscanhub" to "covscanhub";

$ sudo /usr/lib/python2.6/site-packages/covscanhub/manage.py syncdb --all
```

Since database is set up, empty list of tasks should be available now:

```
http://covscan-dev/covscanhub/task/
```


# Runtime configuration

Covscan requires some runtime configuration in order to be fully functional.


## authentication

In order to access django's admin interface, we need an admin account (and a user account to perform scans).

```
$ sudo /usr/lib/python2.6/site-packages/covscanhub/manage.py shell
    from django.contrib.auth import get_user_model
    User = get_user_model()
    User.objects.create_user('kdudka', 'kdudka@redhat.com', 'xxxxxx')
    User.objects.create_superuser('admin', 'kdudka@redhat.com', 'xxxxxx')
```

You should be able to login now via

```
http://covscan-dev/covscanhub/auth/login/
```

...and also access admin interface:

```
http://covscan-dev/covscanhub/admin/
```


## client

install and configure client:

```
$ sudo yum install covscan-client
$ sudo vim /etc/covscan/covscan.conf
    HUB_URL = "http://covscan-dev/covscanhub/xmlrpc"
    AUTH_METHOD = "password"
    USERNAME = "kdudka"
    PASSWORD = "xxxxxx"
```

To test if client is able to connect, let's list available mock configs:

```
$ covscan list-mock-configs
```


## configuring analyzers

FIXME: this should be available via fixture

- go at http://covscan-dev/covscanhub/admin/hub/arch/add
  - type noarch/noarch and save
- go at http://covscan-dev/covscanhub/admin/hub/channel/add/
  - type 'default' and save
- go at http://covscan-dev/covscanhub/admin/scan/profile/
  - edit the 'default' profile
  - set args to:
        {"analyzers": "", "csmock_args": "--all-tools"}
  - hit 'Save'
- now we should be able to submit tasks using the covscan client:

```
$ covscan mock-build --brew-build curl-7.29.0-25.el7
```

## worker setup

In order for worker to successfully pick up scans and process them, we need to create new user which will perform scans and connect worker to hub:

```
$ sudo adduser coverity
$ sudo gpasswd -a coverity mock
$ sudo vim /etc/covscan/covscand.conf 
    HUB_URL = "http://covscan-dev/covscanhub/xmlrpc"
```

Time to configure worker in hub's admin:

- go at http://covscan-dev/covscanhub/admin/hub/worker/add/
    - add worker key from /etc/covscan/covscand.conf
    - FIXME: name needs to match worker's FQDN but needs to be at most 30 chars long
    - select arch 'noarch'
    - select channel 'default'
    - hit 'Save'

In order for worker to pick stuff from brew, we need to install brewkoji package:

```
$ sudo yum install http://download.devel.redhat.com/brewroot/packages/brewkoji/1.9/1.el6eng/noarch/brewkoji-1.9-1.el6eng.noarch.rpm
```

Let's start worker now:

```
$ sudo chkconfig covscand on
$ sudo service covscand start
```

The task should be picked and processed!

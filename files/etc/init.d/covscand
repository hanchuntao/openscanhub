#!/bin/sh
#
# covscand     Start/Stop covscan daemon
#
# chkconfig:   345 99 01
# description: covscand is a daemon that takes coverity scan tasks from a hub\
#              and uploads results back
# processname: covscand


# error codes
ERR_OK=0
ERR_GENERIC=1
ERR_ARGUMENTS=2
ERR_NOT_IMPLEMENTED=3
ERR_PRIVILEGES=4
ERR_NOT_INSTALLED=5
ERR_NOT_CONFIGURED=6
ERR_NOT_RUNNING=7

# status return codes
ST_OK=0
ST_DEAD_PID=1
ST_DEAD_LOCK=2
ST_STOPPED=3
ST_UNKNOWN=4


# source function library.
. /etc/init.d/functions

prog="$(basename $0)"
prog_path="/usr/sbin/covscand"
prog_config="/etc/covscan/covscand.conf"
RETVAL=$ERR_OK


check_start() {
    # Check the status (program must be running or stopped)
    status $prog 2>&1 >/dev/null
    if [ $? -ne $ST_OK -a $? -ne $ST_STOPPED ]; then
        echo "program is dead"
        return $ERR_GENERIC
    fi

    # Check if we're a privileged user
    if [ $(id -u) -ne 0 ]; then
        echo "insufficient privileges"
        return $ERR_PRIVILEGES
    fi

    # Check if program is installed
    if [ ! -f "$prog_path" ]; then
        echo "not installed"
        return $ERR_NOT_INSTALLED
    fi

    # Check if program is configured
    if [ ! -z "$prog_config" -a ! -f "$prog_config" ]; then
        echo "not configured"
        return $ERR_NOT_CONFIGURED
    fi

    # Check if networking is configured.
    if [ "$NETWORKING" == "no" ]; then
        echo "no network"
        return $ERR_GENERIC
    fi

    return $ERR_OK
}


check_condrestart() {
    status $prog 2>&1 >/dev/null
    [ $? -ne $ST_OK ] && return $ERR_NOT_RUNNING
    return $ERR_OK
}


start() {
    echo -n $"Starting $prog: "
    check_start
    RETVAL=$?
    [ $RETVAL -eq $ERR_OK ] || return $RETVAL

    daemon "$prog_path"
    RETVAL=$?
    [ $RETVAL -eq $ERR_OK ] && touch /var/lock/subsys/covscand
    echo
    return $RETVAL
}


stop() {
    echo -n $"Stopping $prog: "
    killproc -p /var/run/$prog.pid $prog
    RETVAL=$?
    [ $RETVAL -eq $ERR_OK ] && rm -f /var/lock/subsys/covscand
    echo
    return $RETVAL
}


restart() {
    stop && start
    return $?
}


condrestart() {
    echo -n $"Trying to restart already running $prog: "
    check_condrestart
    RETVAL=$?
    [ $RETVAL -eq $ERR_OK ] && (echo_success; echo; restart) || (echo_failure; echo)
    return $RETVAL
}


# See how we were called.
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status $prog
    RETVAL=$?
    ;;
  restart|reload)
    restart
    ;;
  condrestart)
    condrestart
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|reload|condrestart}"
    RETVAL=$ERR_ARGUMENTS
esac

exit $RETVAL

#!/usr/bin/python -tt
# -*- coding: utf-8 -*-


import sys
import os

import kobo.exceptions
import kobo.client
import kobo.client.commands

# assuming all commands are in covscan/commands/cmd_*.py modules
import covscan.commands
from covscan.utils.conf import get_config_dict


# inherit container to make sure nobody will change plugins I registered
class CovScanCommandContainer(kobo.client.ClientCommandContainer):
    pass


def main(args=None):
    # register generic kobo commands
    CovScanCommandContainer.register_module(kobo.client.commands, prefix="cmd_")
    # register project specific commands
    CovScanCommandContainer.register_module(covscan.commands, prefix="cmd_")

    conf = get_config_dict(config_env="COVSCAN_CONFIG_FILE", config_default="/etc/covscan/covscan.conf")
    if conf is None:
        return 2

    # initialize command container
    command_container = CovScanCommandContainer(conf)
    parser = kobo.cli.CommandOptionParser(
        command_container=command_container, # plugin container with registered commands
        add_username_password_options=True,  # include auth options to each command
    )

    try:
        parser.run(args)
    except kobo.exceptions.ImproperlyConfigured, ex:
        sys.stderr.write("\n\nError: Improperly configured: %s\n" % ex)
        return 3
    return 0


if __name__ == "__main__":
    sys.exit(main())
